# vim:fileencoding=utf-8:ft=conf

# font_family      JetBrainsMono Nerd Font
# italic_font      JetBrainsMono Nerd Font Italic
# bold_font        JetBrainsMono Nerd Font Bold
# bold_italic_font JetBrainsMono Nerd Font Bolrd Italic

font_family       FiraCode Nerd Font 
italic_font       FiraCode Nerd Font Light
bold_font         FiraCode Nerd Font Bold
bold_italic_font  FiraCode Nerd Font Medium

font_size 16.0

# num | %
adjust_line_height  0
adjust_column_width 0

# block | beam | underline
cursor_shape     block

# disable with 0
cursor_blink_interval 0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 4000

# Program with which to view scrollback in a new window.
# The scrollback buffer is passed as STDIN to this program. 
scrollback_pager less +G -R

# Amount scrolled by the mouse wheel
wheel_scroll_multiplier 5.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

# Characters considered part of a word when double clicking. 
select_by_word_characters @:-./_~?&=%+#

# Hide mouse cursor after the specified number of seconds of the mouse not being used. 
mouse_hide_wait 3.0

# Enabled window layouts. 
enabled_layouts *

# Remembered window size
remember_window_size   yes
initial_window_width   640
initial_window_height  400

# Delay (in milliseconds) between screen updates. 
repaint_delay 10

# Disabled visual bell flash 
visual_bell_duration 0.0

# Disabled the audio bell.
enable_audio_bell no

# The modifier keys to press when clicking with the mouse on URLs to open the URL
open_url_modifiers ctrl+shift

# The program with which to open URLs that are clicked on.
open_url_with default

# The value of the TERM environment variable to set
term xterm-kitty

# The width of window borders. Can be either in pixels (px) or pts (pt)
window_border_width 1

# The window margin (blank area outside the border)
window_margin_width 0

# The window padding (blank area between the text and the window border)
window_padding_width 2

# No need to copy on select
copy_on_select no

# Clipboard key mappings
map ctrl+shift+v paste_from_clipboard
map ctrl+shift+s paste_from_selection
map ctrl+shift+c copy_to_clipboard
map shift+insert paste_from_selection

# Scroll up key mappings
map ctrl+shift+up scroll_line_up
map ctrl+shift+k scroll_line_up
map alt+cmd+page_up scroll_line_up
map cmd+up scroll_line_up
map ctrl+shift+page_up scroll_page_up
map cmd+page_up scroll_page_up

# Scroll down key mappings
map ctrl+shift+down scroll_line_down
map ctrl+shift+j scroll_line_down
map alt+cmd+page_down scroll_line_down
map cmd+down scroll_line_down
map ctrl+shift+page_down scroll_page_down
map cmd+page_down scroll_page_down

# Window management key mappings
map ctrl+shift+enter  new_window
map cmd+enter         new_window
map ctrl+shift+w      close_window
map shift+cmd+d       close_window
map ctrl+shift+]      next_window
map ctrl+shift+[      previous_window
map super+alt+]       move_window_forward
map super+alt+[       move_window_backward
map ctrl+shift+f      move_window_forward
map ctrl+shift+b      move_window_backward
map ctrl+shift+`      move_window_to_top
map ctrl+shift+1      first_window
map ctrl+shift+2      second_window
map ctrl+shift+3      third_window
map ctrl+shift+4      fourth_window
map ctrl+shift+5      fifth_window
map ctrl+shift+6      sixth_window
map ctrl+shift+7      seventh_window
map ctrl+shift+8      eighth_window
map ctrl+shift+9      ninth_window
map ctrl+shift+0      tenth_window

# Tab management key mappings
map ctrl+shift+t        new_tab_with_cwd
map super+t             new_tab_with_cwd
map ctrl+shift+q        close_tab
map ctrl+shift+l        next_layout
map super+l             next_layout
map super+shift+]       next_tab
map super+shift+[       previous_tab
map super+alt+shift+]   move_tab_forward
map super+alt+shift+[   move_tab_backward
map super+1             goto_tab 1
map super+2             goto_tab 2
map super+3             goto_tab 3
map super+4             goto_tab 4
map super+5             goto_tab 5
map super+6             goto_tab 6
map super+7             goto_tab 7
map super+8             goto_tab 8
map super+9             goto_tab 9
map super+0             goto_tab 10

# url hints
map super+e kitten hints

# copy url hints
map super+shift+e kitten hints --program @

# copy selected path hints
map super+shift+c kitten hints --type path --program @

# file path hints
map super+p kitten hints --type path --program -
map super+shift+p kitten hints --multiple --type path --program -

# any line hints
map super+i kitten hints --type line --program -
map super+shift+i kitten hints --multiple --type line --program -

# copy line hints
map super+y kitten hints --type line --program @

# copy multiple line hints
map super+shift+y kitten hints --multiple --type line --program @

# Manipulate font size
map super+plus      increase_font_size
map super+minus     decrease_font_size
map super+equal     restore_font_size

# Reload kitty config
map cmd+control+, load_config_file

# unicode input (emojies)
map ctrl+shift+u

# Position bottom | top
tab_bar_edge top

# fade | powerline | separator
tab_bar_style fade

# Tab title {index} {title}
tab_title_template {index} 

# Fading background 0 ~ 1
tab_fade 1 1 1 1

# No need to check for kitty updates
update_check_interval 0

# Not need for title bar in MacOs
hide_window_decorations titlebar-only

# Draw an extra border around the font with the given width
macos_thicken_font 0

# Use the option key as an alt key. 
# With this set to no, kitty will use the macOS native Option+Key = unicode character behavior.
macos_option_as_alt no

# ansi (colorized text in vim)
map super+d pipe @text overlay nvim -c 'nnoremap q :q!<CR>' -c 'map $ g_' -c ':silent! %s#\($\n\s*\)\+\%$##' '+$' -
map super+f pipe @ansi overlay /Users/paul/Documents/bin/vim-ansi

# Allow other programs to control kitty
allow_remote_control yes

# Config before quitting
confirm_os_window_close 1

# Tabs styles
active_tab_font_style   normal
inactive_tab_font_style normal

include nord.conf
